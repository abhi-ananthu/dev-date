generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String    @unique
  githubUsername String?
  avatarUrl      String?
  bio            String?
  contributions  Int?
  updatedAt      DateTime? @updatedAt

  profile Profile?

  swipesSent     Swipe[] @relation("SwipesSent")
  swipesReceived Swipe[] @relation("SwipesReceived")
}

model Profile {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @unique @db.ObjectId
  age        Int?
  gender     String?
  interests  String[]
  location   String?
  profession String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Match {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user1Id   String   @db.ObjectId
  user2Id   String   @db.ObjectId
  matchedAt DateTime @default(now())
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId   String   @db.ObjectId
  receiverId String   @db.ObjectId
  content    String
  sentAt     DateTime @default(now())
}

model Swipe {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  swiperId  String   @db.ObjectId
  targetId  String   @db.ObjectId
  direction String
  swipedAt  DateTime @default(now())

  swiper User @relation("SwipesSent", fields: [swiperId], references: [id])
  target User @relation("SwipesReceived", fields: [targetId], references: [id])
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}
